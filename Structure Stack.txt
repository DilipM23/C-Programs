//Program to implement stack using array of structure employee

#include<stdio.h>

typedef 
struct EMP
{
	int eid;
	char ename[20];
} E;

//Function to push the elements to the stack
void push(E S[20],E elem,int *top)
{
	if((*top)==19)
		printf("The stack is full\n");
	else
	{
		(*top)++;
		S[*top]=elem;
	}
}

//Function to pop the elements from the stack 
void pop(E S[20],int *top)
{
	if((*top)==-1)
		printf("The stack in empty\n");
	else
	{
		printf("The popped employee structure details is:\n");
		printf("Name : %s\n",S[(*top)].ename);
		printf("ID : %d\n",S[(*top)].eid);
		(*top)--;
	}
}

//Function to display the elements of the stack
void display(E S[20], int top)
{
	if(top==-1)
		printf("The stack is empty\n");
	else
	{
		printf("Displaying the elements of the stack\n");
		while(top>=0)
		{
			printf("Name : %s\n",S[top].ename);
			printf("ID : %d\n",S[top].eid);
			printf("\n\n");
			top--;
		}
	}
	printf("\n\n");
}

int main()
{
	E S[20],elem;
	int top=-1,choice;
	while(1)
	{
		printf("Enter 1 - push\n2 - pop\n3 -dispaly\n");
		scanf("%d",&choice);
		switch(choice)
		{
			case 1: printf("Enter the name and ID to be pushed\n");
				 scanf("%s%d",(elem.ename),&(elem.eid));
				 push(S,elem,&top);
				 break;
			case 2: pop(S,&top);
				 break;
			case 3: display(S,top);
				 break;
			default: printf("Invalid choice\n");
				  return 0;
		}
	}
	return 0;
}

	
